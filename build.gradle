plugins {
	id 'fabric-loom' version '1.10-SNAPSHOT'
	id 'maven-publish'
	id "me.shedaniel.unified-publishing" version "0.1.+"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	maven {
    	url = "https://api.modrinth.com/maven"
	}
}

loom {
	splitEnvironmentSourceSets()
	mods {
		"newsfeed" {
			sourceSet sourceSets.main
			sourceSet sourceSets.client
		}
	}

}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation include("org.jdom:jdom2:${project.jdom_version}")
	modImplementation include("com.rometools:rome:${project.rome_version}")
	modImplementation include("com.rometools:rome-utils:${project.rome_version}")
	modImplementation include ("maven.modrinth:midnightlib:${project.midnightlib_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

ext {
	releaseChangelog = {
		def changes = new StringBuilder()
		changes << "## News Feed v$project.version for $project.minecraft_version\n[View the changelog](https://www.github.com/sandydunlop/PersonalizedSplashScreen/commits/)"
		def proc = "git log --max-count=1 --pretty=format:%s".execute()
		proc.in.eachLine { line ->
			def processedLine = line.toString()
			if (!processedLine.contains("New translations") && !processedLine.contains("Merge") && !processedLine.contains("branch")) {
				changes << "\n- ${processedLine.capitalize()}"
			}
		}
		proc.waitFor()
		return changes.toString()
	}
}

unifiedPublishing {
	project {
		displayName = "News Feed v$project.version - Fabric $project.minecraft_version"
		releaseType = "$project.release_type"
		changelog = releaseChangelog()
		gameVersions = []
		gameLoaders = ["fabric","quilt"]
		mainPublication remapJar
		relations {
			includes {
				curseforge = "midnightlib"
				modrinth = "midnightlib"
			}
		}

		var CURSEFORGE_TOKEN = project.findProperty("CURSEFORGE_TOKEN") ?: System.getenv("CURSEFORGE_TOKEN")
		if (CURSEFORGE_TOKEN != null) {
			curseforge {
				token = CURSEFORGE_TOKEN
				id = rootProject.curseforge_id
				gameVersions.addAll "Java 21", project.minecraft_version
			}
		}

		var MODRINTH_TOKEN = project.findProperty("MODRINTH_TOKEN") ?: System.getenv("MODRINTH_TOKEN")
		if (MODRINTH_TOKEN != null) {
			modrinth {
				token = MODRINTH_TOKEN
				id = rootProject.modrinth_id
				version = "$project.version"
				gameVersions.addAll project.minecraft_version
			}
		}
	}
}